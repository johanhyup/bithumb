1) 인증 및 공통 정보
--------------------------------------------------------------------------------
[요청 형식 / Content-Type]
- REST API는 HTTP 통해 호출
- POST, PUT, DELETE에서 body가 있으면 JSON으로 파라미터 전송
- Content-Type 예시: application/json; charset=utf-8

[JWT 인증 토큰 생성]
- JWT (https://jwt.io) 포맷, 서명방식: HS256 권장
- Secret Key = 발급받은 Secret Key
- 페이로드 필수 항목:
  access_key (String), nonce (String: UUID), timestamp (Number: ms)
  query_hash, query_hash_alg (파라미터가 있을 때 사용; 기본 SHA512)
- 헤더로 `Authorization: Bearer {JWT_TOKEN}` 전송

[query_hash 사용]
- GET 파라미터 혹은 POST body 등 Query String으로 전달되는 모든 파라미터를
  지정된 알고리즘(SHA512)으로 해싱 후, 그 해시값을 JWT payload에
  query_hash로 추가하고, query_hash_alg에 사용 알고리즘을 지정

--------------------------------------------------------------------------------
2) 시세 관련 조회
--------------------------------------------------------------------------------
(1) 마켓 코드 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/market/all
- 빗썸에서 거래 가능한 마켓 코드, 해당 가상자산 정보 조회
- 파라미터 isDetails (boolean, 기본값 false):
  - 상세 정보(유의종목) 필드를 포함할지 여부

[RESPONSE 필드]
- market: 시장 정보 (예: KRW-BTC)
- korean_name: 코인 한글명
- english_name: 코인 영문명
- market_warning: 유의 종목 여부 (NONE / CAUTION)

--------------------------------------------------------------------------------
(2) 캔들 (시세 차트) 조회
--------------------------------------------------------------------------------
[분(minute) 캔들]
[GET] https://api.bithumb.com/v1/candles/minutes/{unit}
- {unit} = 1,3,5,10,15,30,60,240
- Query Params:
  market (기본값 KRW-BTC), to (마지막 캔들 시각, 비우면 최신),
  count (최대 200, 기본 1)
[RESPONSE 필드]
- market, candle_date_time_utc (UTC), candle_date_time_kst (KST)
- opening_price (시가), high_price (고가), low_price (저가), trade_price (종가)
- timestamp (KST 기준), candle_acc_trade_price (누적 거래 금액),
  candle_acc_trade_volume (누적 거래량), unit (분봉 단위)

[일(day) 캔들]
[GET] https://api.bithumb.com/v1/candles/days
- Query Params:
  market (필수), to (마지막 캔들 시각), count (최대 200, 기본1)
  convertingPriceUnit (KRW 등으로 환산종가를 구할 때 사용)
[RESPONSE 필드]
- market, candle_date_time_utc, candle_date_time_kst, opening_price,
  high_price, low_price, trade_price, timestamp, candle_acc_trade_price,
  candle_acc_trade_volume, prev_closing_price, change_price, change_rate,
  converted_trade_price (환산가격; convertingPriceUnit 파라미터 사용 시만)

[주(week) 캔들]
[GET] https://api.bithumb.com/v1/candles/weeks
- Query Params:
  market (필수), to, count(최대200,기본1)
[RESPONSE 필드]
- market, candle_date_time_utc/kst, opening_price, high_price, low_price,
  trade_price, timestamp, candle_acc_trade_price, candle_acc_trade_volume,
  first_day_of_period (해당 주의 시작일)

[월(month) 캔들]
[GET] https://api.bithumb.com/v1/candles/months
- Query Params:
  market (필수), to, count(최대200,기본1)
[RESPONSE 필드]
- market, candle_date_time_utc/kst, opening_price, high_price, low_price,
  trade_price, timestamp, candle_acc_trade_price, candle_acc_trade_volume,
  first_day_of_period (해당 월의 시작일)

--------------------------------------------------------------------------------
(3) 체결 조회
--------------------------------------------------------------------------------
[최근 체결 내역]
[GET] https://api.bithumb.com/v1/trades/ticks
- Query Params:
  market (필수), to (마지막 체결 시각), count (최대 개수),
  cursor, daysAgo(1~7 내)
[RESPONSE 필드]
- market, trade_date_utc, trade_time_utc, timestamp, trade_price, trade_volume,
  prev_closing_price, change_price, ask_bid(매도/매수 구분), sequential_id

--------------------------------------------------------------------------------
(4) 시세 현재가(Ticker) 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/ticker
- Query Params:
  markets (예: KRW-BTC,BTC-ETH), 복수 시장 조회 가능
[RESPONSE 필드]
- market, trade_date, trade_time, trade_date_kst, trade_time_kst,
  trade_timestamp, opening_price, high_price, low_price,
  trade_price(현재가), prev_closing_price, change(RISE/FALL/EVEN),
  change_price, change_rate, signed_change_price, signed_change_rate,
  trade_volume(가장 최근 거래량), acc_trade_price(해당일 0시부터 누적),
  acc_trade_price_24h(24시간 누적 거래대금), acc_trade_volume,
  acc_trade_volume_24h, highest_52_week_price/lowest_52_week_price,
  highest_52_week_date/lowest_52_week_date, timestamp

--------------------------------------------------------------------------------
(5) 시세 호가(Orderbook) 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/orderbook
- Query Params:
  markets (콤마구분; 예: KRW-BTC,BTC-ETH)
[RESPONSE 필드]
- market, timestamp, total_ask_size, total_bid_size
- orderbook_units(리스트):
  - ask_price, bid_price, ask_size, bid_size
  (단일 마켓으로 요청하면 최대 30호가 정보가 반환됨)

--------------------------------------------------------------------------------
(6) 경보제 (Warning)
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/market/virtual_asset_warning
- 경보중인 마켓/코인 목록 조회
[RESPONSE 필드]
- market, warning_type (PRICE_SUDDEN_FLUCTUATION, TRADING_VOLUME_SUDDEN_FLUCTUATION, 등),
  end_date(KST기준, yyyy-MM-dd HH:mm:ss)


--------------------------------------------------------------------------------
3) 계좌 (자산) 관련
--------------------------------------------------------------------------------
(1) 전체 계좌 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/accounts
- 보유 자산 정보 조회
[RESPONSE 필드]
- currency, balance(주문가능), locked(주문중), avg_buy_price, avg_buy_price_modified,
  unit_currency(KRW 등)

--------------------------------------------------------------------------------
(2) 주문 가능 정보 (Orders Chance)
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/orders/chance
- 특정 마켓에서 주문 가능 정보를 조회
- Query Param: market (필수)
[RESPONSE 필드]
- bid_fee, ask_fee, maker_bid_fee, maker_ask_fee
- market (id, name, order_types, order_sides, bid/ask 의 최소주문금액, state 등)
- bid_account / ask_account: 해당 통화의 balance, locked, avg_buy_price, etc.

--------------------------------------------------------------------------------
4) 주문(Order) 처리
--------------------------------------------------------------------------------
(1) 개별 주문 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/order
- Query Params:
  uuid(주문고유아이디 필수)
[RESPONSE 필드]
- uuid, side(ask/bid), ord_type(limit/price/market), price, state,
  market, created_at, volume, remaining_volume, reserved_fee, remaining_fee,
  paid_fee, locked, executed_volume, trades_count,
  trades (체결 상세: price, volume, funds, side, created_at 등)

--------------------------------------------------------------------------------
(2) 주문 리스트 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/orders
- Query Params:
  market, state(wait/watch/done/cancel),
  states(상태 배열), uuids(주문 UUID 목록), page(기본1), limit(기본100), order_by(asc/desc)
[RESPONSE 필드] (주문 목록 배열)
- uuid, side, ord_type, price, state, market, created_at, volume, remaining_volume,
  reserved_fee, remaining_fee, paid_fee, locked, executed_volume, trades_count

--------------------------------------------------------------------------------
(3) 주문 취소 접수
--------------------------------------------------------------------------------
[DELETE] https://api.bithumb.com/v1/order
- Query Param: uuid (필수)
[RESPONSE 필드]
- uuid, side, ord_type, price, state, market, created_at,
  volume, remaining_volume, reserved_fee, remaining_fee, paid_fee,
  locked, executed_volume, trades_count

--------------------------------------------------------------------------------
(4) 주문하기 (신규 주문)
--------------------------------------------------------------------------------
[POST] https://api.bithumb.com/v1/orders
- Body Param:
  market(마켓ID), side(ask/bid), volume, price, ord_type(limit/price/market)
- 주의: 지정가 주문 시 본인 미체결 주문과 자전거래 위험이 높은 경우 주문 불가
[RESPONSE 필드]
- uuid, side, ord_type, price, state, market, created_at, volume,
  remaining_volume, reserved_fee, remaining_fee, paid_fee, locked,
  executed_volume, trades_count

--------------------------------------------------------------------------------
5) 출금(Withdraw)
--------------------------------------------------------------------------------
(1) 코인 출금 리스트 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/withdraws
- Query Params:
  currency, state(PROCESSING/DONE/CANCELED),
  uuids, txids, page, limit(기본100), order_by(asc/desc)
[RESPONSE 필드] (출금 리스트 배열)
- type(withdraw), uuid, currency, net_type, txid, state, created_at,
  done_at, amount, fee, transaction_type(default 등)

--------------------------------------------------------------------------------
(2) 원화 출금 리스트 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/withdraws/krw
- Query Params:
  state(PROCESSING/DONE/CANCELED),
  uuids, txids, page(기본1), limit(기본100), order_by(asc/desc)
[RESPONSE 필드]
- type(withdraw), uuid, currency(KRW), txid, state, created_at, done_at,
  amount, fee, transaction_type(default)

--------------------------------------------------------------------------------
(3) 개별 출금 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/withdraw
- Query Params:
  currency(필수), uuid 혹은 txid (둘 중 하나 필요)
[RESPONSE 필드]
- type(withdraw), uuid, currency, net_type, txid, state, created_at,
  done_at, amount, fee, transaction_type(default)

--------------------------------------------------------------------------------
(4) 출금 가능 정보
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/withdraws/chance
- Query Params:
  currency(필수), net_type(필수)
[RESPONSE 필드]
- member_level: 사용자의 보안등급 정보
- currency: code, withdraw_fee, is_coin, wallet_state, wallet_support
- account: balance, locked, avg_buy_price, ...
- withdraw_limit: 최소/1회/1일/잔여 한도, fixed 소수자리, can_withdraw, remaining_daily_krw 등

--------------------------------------------------------------------------------
(5) 가상자산 출금하기
--------------------------------------------------------------------------------
[POST] https://api.bithumb.com/v1/withdraws/coin
- Body Param:
  currency(필수), net_type(필수), amount(필수), address(필수), secondary_address(필요 시),
  exchange_name(거래소명 영문), receiver_type(personal/corporation),
  receiver_ko_name, receiver_en_name, receiver_corp_ko_name, receiver_corp_en_name
[RESPONSE 필드]
- type(withdraw), uuid, currency, net_type, txid, state, created_at,
  done_at, amount, fee, krw_amount(원화환산금액), transaction_type

--------------------------------------------------------------------------------
(6) 원화 출금하기
--------------------------------------------------------------------------------
[POST] https://api.bithumb.com/v1/withdraws/krw
- Body Param:
  amount(필수, NumberString), two_factor_type(필수: kakao)
[RESPONSE 필드]
- type(withdraw), uuid, currency(KRW), txid, state, created_at, done_at,
  amount, fee, transaction_type

--------------------------------------------------------------------------------
(7) 출금 허용 주소 리스트 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/withdraws/coin_addresses
- 등록된 ‘100만원 이상 출금 가능’ 주소 목록 조회
[RESPONSE 필드] (배열)
- currency, net_type, network_name, withdraw_address, secondary_address, exchange_name,
  owner_type(personal/corporation), owner_ko_name, owner_en_name,
  owner_corp_ko_name, owner_corp_en_name

--------------------------------------------------------------------------------
6) 입금(Deposit)
--------------------------------------------------------------------------------
(1) 코인 입금 리스트 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/deposits
- Query Params:
  currency, state(REQUESTED_*, DEPOSIT_*, REFUNDING_*, REFUNDED_* 등),
  uuids, txids, page(기본1), limit(기본100), order_by(asc/desc)
[RESPONSE 필드]
- type(deposit), uuid, currency, net_type, txid, state(다양한 상태),
  created_at, done_at, amount, fee, transaction_type(default)

--------------------------------------------------------------------------------
(2) 원화 입금 리스트 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/deposits/krw
- Query Params:
  state(PROCESSING/ACCEPTED/CANCELED),
  uuids, txids, page(기본1), limit(기본100), order_by(asc/desc)
[RESPONSE 필드]
- type(deposit), uuid, currency(KRW), txid, state, created_at,
  done_at, amount, fee, transaction_type(default)

--------------------------------------------------------------------------------
(3) 개별 입금 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/deposit
- Query Params:
  currency(필수), uuid 또는 txid
[RESPONSE 필드]
- type(deposit), uuid, currency, net_type, txid, state, created_at,
  done_at, amount, fee, transaction_type(default)

--------------------------------------------------------------------------------
(4) 입금 주소 생성 요청
--------------------------------------------------------------------------------
[POST] https://api.bithumb.com/v1/deposits/generate_coin_address
- Body Param:
  currency(필수), net_type(필수)
[RESPONSE 필드]
- currency, net_type, deposit_address, secondary_address

--------------------------------------------------------------------------------
(5) 전체 입금 주소 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/deposits/coin_addresses
- 모든 코인에 대한 입금 주소 목록 조회
[RESPONSE 필드] (배열)
- currency, net_type, deposit_address, secondary_address

--------------------------------------------------------------------------------
(6) 개별 입금 주소 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/deposits/coin_address
- Query Params:
  currency(필수), net_type(필수)
[RESPONSE 필드]
- currency, net_type, deposit_address, secondary_address

--------------------------------------------------------------------------------
(7) 원화 입금하기
--------------------------------------------------------------------------------
[POST] https://api.bithumb.com/v1/deposits/krw
- Body Param:
  amount(필수, 원화), two_factor_type(필수: kakao)
[RESPONSE 필드]
- type(deposit), uuid, currency(KRW), txid, state, created_at,
  done_at, amount, fee, transaction_type(default)

--------------------------------------------------------------------------------
7) 기타 서비스 정보
--------------------------------------------------------------------------------
(1) 입출금 현황
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/status/wallet
- 입출금 가능 여부 및 블록 상태 조회
[RESPONSE 필드]
- currency, wallet_state(working/paused 등), block_state(normal/delayed/inactive),
  block_height, block_updated_at, block_elapsed_minutes, net_type, network_name

--------------------------------------------------------------------------------
(2) API 키 리스트 조회
--------------------------------------------------------------------------------
[GET] https://api.bithumb.com/v1/api_keys
- API Key, 만료 일자 조회
[RESPONSE 필드] (배열)
- access_key, expire_at

--------------------------------------------------------------------------------
[주의 사항 요약]
- 모든 Private API 호출 시 JWT로 인증 필요 (access_key, secret_key 이용)
- Query(또는 body) 해시(query_hash) 생성: SHA512
- Timestamp는 ms 단위
- Request 파라미터에 따라 필수/옵션 구분 철저히 확인
- 각각의 API에서 지원하는 파라미터나 응답 필드의 자료형, 제약사항 (최대 200개 등) 확인
- 이 문서 내 REST API 모두 공통적으로 `Authorization: Bearer {JWT}` 헤더 사용

--------------------------------------------------------------------------------
